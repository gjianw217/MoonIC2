/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp com.mooncell.panel.xml -i qpaneldbus.h -c QPanelAdaptor -a qpaneladaptor
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "qpaneladaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class QPanelAdaptor
 */

QPanelAdaptor::QPanelAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

QPanelAdaptor::~QPanelAdaptor()
{
    // destructor
}

bool QPanelAdaptor::setBz(uchar on1off0, uchar hz)
{
    // handle method call com.mooncell.panel.interface.setBz
    bool out0;
    QMetaObject::invokeMethod(parent(), "setBz", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, on1off0), Q_ARG(uchar, hz));
    return out0;
}

bool QPanelAdaptor::setLcd(uchar x, uchar y, const QByteArray &data)
{
    // handle method call com.mooncell.panel.interface.setLcd
    bool out0;
    QMetaObject::invokeMethod(parent(), "setLcd", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, x), Q_ARG(uchar, y), Q_ARG(QByteArray, data));
    return out0;
}

bool QPanelAdaptor::setLcdClear()
{
    // handle method call com.mooncell.panel.interface.setLcdClear
    bool out0;
    QMetaObject::invokeMethod(parent(), "setLcdClear", Q_RETURN_ARG(bool, out0));
    return out0;
}

bool QPanelAdaptor::setLcdClearLine(uchar y)
{
    // handle method call com.mooncell.panel.interface.setLcdClearLine
    bool out0;
    QMetaObject::invokeMethod(parent(), "setLcdClearLine", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, y));
    return out0;
}

bool QPanelAdaptor::setLcdFull(uchar data)
{
    // handle method call com.mooncell.panel.interface.setLcdFull
    bool out0;
    QMetaObject::invokeMethod(parent(), "setLcdFull", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, data));
    return out0;
}

bool QPanelAdaptor::setLcdFullLine(uchar y, uchar data)
{
    // handle method call com.mooncell.panel.interface.setLcdFullLine
    bool out0;
    QMetaObject::invokeMethod(parent(), "setLcdFullLine", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, y), Q_ARG(uchar, data));
    return out0;
}

bool QPanelAdaptor::setLcdLine(uchar y, const QByteArray &data)
{
    // handle method call com.mooncell.panel.interface.setLcdLine
    bool out0;
    QMetaObject::invokeMethod(parent(), "setLcdLine", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, y), Q_ARG(QByteArray, data));
    return out0;
}

bool QPanelAdaptor::setLcdPos(uchar on1off0, uchar pos)
{
    // handle method call com.mooncell.panel.interface.setLcdPos
    bool out0;
    QMetaObject::invokeMethod(parent(), "setLcdPos", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, on1off0), Q_ARG(uchar, pos));
    return out0;
}

bool QPanelAdaptor::setLed(uchar on1off0, uchar index)
{
    // handle method call com.mooncell.panel.interface.setLed
    bool out0;
    QMetaObject::invokeMethod(parent(), "setLed", Q_RETURN_ARG(bool, out0), Q_ARG(uchar, on1off0), Q_ARG(uchar, index));
    return out0;
}

